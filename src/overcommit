#!/bin/bash
#
#	/etc/rc.d/init.d/overcommit
#
#	Set overcommit policy in the kernel
#
# chkconfig: 2345 13 87
# description: Sets the sysctl vm.overcommit_memory.
#              There's no daemon or pid file.

### BEGIN INIT INFO
# ref: http://refspecs.linux-foundation.org/LSB_3.2.0/LSB-Core-generic/LSB-Core-generic/facilname.html
# Provides: overcommit
# Required-Start: $syslog
# Required-Stop: 
# Default-Start: 2345
# Default-Stop: 87
# Short-Description: Set overcommit policy in the kernel.
# Description:      Modifies the kernel tunables affecting overcommit memory policy.
### END INIT INFO


# exit codes
  # standard codes per
  # http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
  rc_OK=0
  rc_dead_and_pid_file_exists=1
  rc_dead_and_lock_exists=2
  rc_not_running=3
  rc_unimplemented=3
  rc_unknown=4
  # app-specific codes (150-199)

prog=$(basename $0)

# Source function library.
. /etc/init.d/functions

# source start/stop options
[ -r /etc/sysconfig/overcommit ] && . /etc/sysconfig/overcommit

# default start/stop options
START=${START:-/etc/overcommit/never-overcommit.conf}
STOP=${STOP:-/etc/overcommit/default-overcommit.conf}

# functions

status() {
        echo -n "Status of overcommit policy: "

	/usr/sbin/apply-sysctl -V $START
	_rc=$?

	[ $_rc -eq 0 ] && echo_success || echo_failure
	echo
	return $_rc
}

start() {
	echo -n "Setting $START: "

	/usr/sbin/apply-sysctl -a $START

	# per 
	# http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
	# this should return 0 if we are started, even on a service already running
	/usr/sbin/apply-sysctl -V $START
	_rc=$?

	[ $_rc -eq 0 ] && echo_success || echo_failure
	echo
	return $_rc
}	

stop() {
	echo -n "Setting $STOP: "

	/usr/sbin/apply-sysctl -a $STOP

	# per 
	# http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
	# we should return 0 if stopped, even if we were already stopped or not enabled
	/usr/sbin/apply-sysctl -V $STOP
	_rc=$?

	[ $_rc -eq 0 ] && echo_success || echo_failure
	echo
	return $_rc
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	status
	;;
    restart)
    	stop
	start
	;;
    *)
	echo "Usage: overcommit {start|stop|status|restart}"
	exit $rc_unimplemented
	;;
esac
exit $?
